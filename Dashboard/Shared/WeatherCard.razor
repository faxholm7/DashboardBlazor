@using DataModels
@using Dashboard.Services
@inject IWeatherForecastService _forecastservice


<div class="col-xl-3">
    <div class="card mb-3">
        <div class="card-header">
            <b>Vejret i <span>Kolding</span></b>
        </div>
        <div class="card-body">

            @if (forecast == null)
            {
                <p class="mt-5 mb-5"><em>Henter data...</em></p>

            }
            else
            {

                <em class="card-title">
                    Den <span>@forecast.Day.ToShortDateString()</span>
                    kl.<span>@forecast.Day.ToString("HH:mm")</span> og en time frem
                </em>
                <ul class="list-group list-group-flush mt-3 mb-2">
                    <li class="list-group-item">Temperatur: <span class="float-end">@forecast.Temperature &#8451;</span></li>
                    <li class="list-group-item">Skydække: <span class="float-end">@forecast.Cloudcover %</span> </li>
                    <li class="list-group-item">Conditions: <span class="float-end">@forecast.Conditions</span></li>
                </ul>
                <button type="button" class="btn btn-primary btn-sm float-end">Reload</button>

            }

        </div>
    </div>
</div>
@code {
    private WeatherForecastModel? forecast = null;

    protected override async Task OnInitializedAsync()
    {
        var forecast = await _forecastservice.GetWeather();

    }
}
