@using DataModels
@using Dashboard.Services
@using System.Text.Json
@inject IWeatherForecastService _forecastservice

<div class="col-xl-3 p-2">
    <div class="card mb-3 h-100">
        <div class="card-header">
            <b>Vejret i <span>Kolding</span></b>
        </div>

        @if (forecast == null)
        {
            <Preloader />
        }
        else
        {
            <div class="card-body">
                <em class="card-title">
                    Den <span>@forecast.Day.ToShortDateString()</span>
                    kl.<span>@forecast.Day.ToString("HH:mm")</span>
                </em>
                <ul class="list-group list-group-flush mt-3 pb-2">
                    <li class="list-group-item">Temperatur: <span class="float-end">@forecast.Temperature &#8451;</span></li>
                    <li class="list-group-item">Skydække: <span class="float-end">@forecast.Cloudcover %</span> </li>
                    <!-- <li class="list-group-item">Conditions: <span class="float-end">@forecast.Conditions</span></li>-->
                <li class="list-group-item">Solopgang: <span class="float-end">@forecast.Sunrise.ToString("HH:mm")</span> </li>
                    <li class="list-group-item">Solnedgang: <span class="float-end">@forecast.Sunset.ToString("HH:mm")</span> </li>
                </ul>



            </div>
            <div class="card-footer">
                <a href="vejrudsigt" class="btn btn-secondary btn-sm float-end">Se 24 timer</a>
            </div>

        }

    </div>
</div>

@code {
    private WeatherForecastModel forecast = null;

    protected override async Task OnInitializedAsync()
    {
        forecast = await _forecastservice.GetWeather();

    }
}
